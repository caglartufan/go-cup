@use 'sass:map';
@use 'variables' as *;

@mixin clearfix {
    &::after {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Box shadow
@mixin box-shadow($type) {
  	box-shadow: map.get($box-shadows, $type);
}

// Add $prefix--$name SCSS definitions for each status color (danger, success etc.)
@mixin status-modifiers {
	@each $name, $color in $status {
		&--#{$name} {
			@content($color);
		}
	}
}

// Add $prefix--shadow-$level SCSS definitions for each $box-shadows variable
@mixin box-shadow-modifiers {
	@each $level, $property in $box-shadows {
		&--shadow-#{$level} {
			box-shadow: map.get($box-shadows, $level);
		}
	}
}

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
    $raw-query: map-get($breakpoints, $breakpoint);
  
    @if $raw-query {
		$query: if(
			type-of($raw-query) == 'string',
			unquote($raw-query),
			inspect($raw-query)
		);
	
		@media only screen and #{$query} {
			@content;
		}
    } @else {
      	@error 'No value found for `#{$breakpoint}`. '
           	 + 'Please make sure it is defined in `$breakpoints` map.';
    }
  }